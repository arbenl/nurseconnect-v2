{
  "agent": "SECURITY",
  "task": "1-auth-roles",
  "summary": "Establishes least-privilege Firestore rules for user profiles and NextAuth collections, and adds required secrets to the environment configuration.",
  "actions": [
    {
      "type": "write",
      "path": "firestore.rules",
      "description": "Configure Firestore security rules for least-privilege access to user profiles and NextAuth.js collections.",
      "content": "rules_version = '2';\n\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Default-deny all access to prevent accidental exposure.\n    match /{document=**} {\n      allow read, write: if false;\n    }\n\n    // Users can create their own profile upon signup.\n    // They can only read and update their own document.\n    // Role escalation is prevented.\n    match /users/{userId} {\n      allow create: if request.auth != null;\n      allow read, update: if request.auth.uid == userId\n                          && request.resource.data.role == resource.data.role;\n    }\n\n    // NextAuth collections require access for the adapter.\n    // Access is restricted to the owner of the data.\n    // Assumes a `userId` field is present on these documents.\n    match /accounts/{accountId} {\n      allow read, create, update, delete: if request.auth.uid == request.resource.data.userId;\n    }\n\n    match /sessions/{sessionId} {\n      allow read, create, update, delete: if request.auth.uid == request.resource.data.userId;\n    }\n\n    // Verification tokens for email sign-in links.\n    // They are short-lived and should not be readable.\n    match /verificationTokens/{token} {\n      allow create, delete: if true; // Adapter handles token validation\n      allow read: if false;\n    }\n  }\n}\n"
    },
    {
      "type": "append",
      "path": ".env.example",
      "description": "Add environment variables required for NextAuth.js and the Firebase Admin SDK.",
      "content": "\n# =================================================\n# PHASE 1: AUTH & ROLES - SECURITY\n# =================================================\n\n# NextAuth.js Configuration\n# A secret used to sign cookies and tokens. Generate with `openssl rand -base64 32`\nNEXTAUTH_SECRET=\"\"\nNEXTAUTH_URL=\"http://localhost:3000\"\n\n# Firebase Admin SDK (for NextAuth Firebase Adapter)\n# Create a service account in your Firebase project settings and download the JSON key.\n# IMPORTANT: In production, use a secret manager (e.g., Google Secret Manager, Doppler)\n# instead of putting the raw private key in a .env file.\nFIREBASE_PROJECT_ID=\"\"\nFIREBASE_CLIENT_EMAIL=\"\"\n# For the private key, remove the header/footer and replace newlines with \\n\n# e.g., \"-----BEGIN PRIVATE KEY-----\\n...\\n-----END PRIVATE KEY-----\\n\"\nFIREBASE_PRIVATE_KEY=\"\"\n"
    }
  ],
  "verify": [
    "firebase emulators:exec --only firestore,auth --project demo-nurseconnect \"pnpm -w vitest run\""
  ],
  "notes": [
    "A strong NEXTAUTH_SECRET must be generated and placed in the real .env file.",
    "Firebase Admin SDK credentials must be obtained from the project's service account settings and stored securely.",
    "These Firestore rules are a baseline. As new collections and roles are added, they must be explicitly granted access here."
  ]
}